#!/usr/bin/env bash

##
# Defining services
#
# The different define methods are just convenience: there is no difference to
# the serivces or how they are defined.
#
# The syntax for adding items to the container is as follows:
# - a scalar parameter:
#   container::add "parameter-name" "parameter-value"
# - an array-like parameter:
#   container::add "parameter-name" "--" "parameter-value-1" "parameter-value-2"
# - a service:
#   container::add "service-name" "path/2/service" "@dependency-alias" [,...]
#
# Using a dependency alias to resolve the path to a service is a bit buggy, so
# best to avoid this, at time of writing. However, a value can be concatenated
# to the end of a resolved scalar parameter using '::' as the glue - e.g.:
#   "@parameter-value::concatenated-value"
##

__services_base="$1" && shift
__services_config="$@"

##
# Defines available config.
##
__services::define_config() {
    local key
    local value

    for item in ${__services_config[*]}; do
        [[ "$item" =~ ^(.*)=(.*)$ ]]
        key="$(echo ${BASH_REMATCH[1]} | sed "s/_/-/g")"
        value="${BASH_REMATCH[2]}"

        container::add "$key" "$value"
    done
}

##
# Defines available parameters.
##
__services::define_parameters() {
    container::add "config-dir" "$__services_base/config"
    container::add "lib-dir" "$__services_base/lib"
    container::add "src-dir" "$__services_base/src"

    # add all src dirs as container parameters
    for dir in $(find $__services_base/src -mindepth 1 -maxdepth 1 -type d); do
        container::add "$(basename $dir)-dir" "$dir"
    done

    local excluding_pipe=$(container::resolve "excluding-pipe")
    container::add "message-routing" \
        "--" \
            "$__services_base/src/message/kill-message|$excluding_pipe" \
            "$__services_base/src/message/report-message|$excluding_pipe"
}

##
# Defines available services.
##
__services::define_services() {
    # lib
    container::add "stdout-logger" \
        "$__services_base/lib/log-slog/index" \
            "@log-level" \
            "$(tty)"
    container::add "bash-clash" \
        "$__services_base/lib/bash-clash/index"

    # commands
    container::add "time-warp-command" \
        "$__services_base/src/command/time-warp/index"
    container::add "queue-command" \
        "$__services_base/src/command/queue/index"
    container::add "watch-command" \
        "$__services_base/src/command/watch/index"

    # handlers
    container::add "message-handler" \
        "$__services_base/src/handler/message-handler" \
            "@action-dir" \
            "@stdout-logger" \
            "@bash-clash"

    # consumers
    container::add "excluding-consumer" \
        "$__services_base/src/service/queue/consumer" \
            "@excluding-pipe" \
            "@message-handler" \
            "@stdout-logger"

    # buses
    container::add "message-bus" \
        "$__services_base/src/bus/message-bus" \
            "@message-dir" \
            "@stdout-logger" \
            "@message-routing"
}

##
# Defines all configured services.
##
services::define() {
    __services::define_config
    __services::define_parameters
    __services::define_services

    unset __services_base
    unset __services_config
}
