#!/usr/bin/env bash

__services_base="${1:?"A services base directory is required"}"
__services_config="${@:2}"

##
# Defines available config.
##
__services::define_config() {
    local key
    local value

    for item in ${__services_config[*]}; do
        [[ "$item" =~ ^(.*)=(.*)$ ]]
        key="$(echo ${BASH_REMATCH[1]} | sed "s/_/-/g")"
        value="${BASH_REMATCH[2]}"

        container::add "$key" "$value"
    done
}

##
# Defines available parameters.
##
__services::define_parameters() {
    container::add "config-dir" "$__services_base/config"
    container::add "lib-dir" "$__services_base/lib"
    container::add "src-dir" "$__services_base/src"

    # add all src dirs as container parameters
    for dir in $(find $__services_base/src -mindepth 1 -maxdepth 1 -type d); do
        container::add "$(basename $dir)-dir" "$dir"
    done

    # logging channels
    container::add "stdout-channel" $(tty)
    container::add "file-channel" $(container::resolve "@log-dir::/$(date '+%Y-%m-%d').log")

    # pipes
    container::add "excluding-pipe" $(container::resolve "@org-tmp::/excluding-pipe")

    # message routing
    local excluding_pipe=$(container::resolve "@excluding-pipe")
    container::add "message-routing" \
        "--" \
            "@kill-message::$excluding_pipe" \
            "@report-message::$excluding_pipe" \
            "@exclude-message::$excluding_pipe"
}

##
# Defines available services.
##
__services::define_services() {
    # lib
    # - aliases for config items that resolve to valid file paths will not be
    #   sourced and, therefore, not resolve at runtime; they must be resolved here
    container::add "file-logger" \
        "$__services_base/lib/log-slog/index" \
            "@log-level" \
            $(container::resolve "@file-channel")

    container::add "stdout-logger" \
        "$__services_base/lib/log-slog/index" \
            "@log-level" \
            $(container::resolve "@stdout-channel") \
            "->"

    container::add "bash-clash" \
        "$__services_base/lib/bash-clash/index"

    # commands
    container::add "queue-command" \
        "$__services_base/src/command/queue/index" \
            "@consume-feature" \
            "@message-feature" \
            "@produce-feature"

    container::add "time-warp-command" \
        "$__services_base/src/command/time-warp/index" \
            "@queue-command" \
            "@watch-command"

    container::add "watch-command" \
        "$__services_base/src/command/watch/index" \
            "@watch-feature"

    # features
    container::add "consume-feature" \
        "$__services_base/src/feature/consume-feature" \
            "@excluding-consumer"

    container::add "message-feature" \
        "$__services_base/src/feature/message-feature" \
            "@message-bus" \
            "@stdout-logger"

    container::add "produce-feature" \
        "$__services_base/src/feature/produce-feature" \
            "@excluding-producer" \
            "@stdout-logger"

    container::add "watch-feature" \
        "$__services_base/src/feature/watch-feature" \
            "@excluding-consumer" \
            "@stdout-logger"

    # consumers
    container::add "excluding-consumer" \
        "$__services_base/src/service/queue/consumer" \
            "@stdout-logger" \
            "@excluding-pipe" \
            "@message-handler"

    # producers
    container::add "excluding-producer" \
        "$__services_base/src/service/queue/producer" \
            "@stdout-logger" \
            "@message-bus"

    # buses
    container::add "message-bus" \
        "$__services_base/src/bus/message-bus" \
            "@stdout-logger" \
            "@message-routing"

    # messages
    container::add "kill-message" \
        "$__services_base/src/message/kill-message"

    container::add "report-message" \
        "$__services_base/src/message/report-message"

    container::add "exclude-message" \
        "$__services_base/src/message/exclude-message"

    # handlers
    container::add "message-handler" \
        "$__services_base/src/handler/message-handler" \
            "@bash-clash" \
            "@stdout-logger"

    # actions
    container::add "exclude-action" \
        "$__services_base/src/action/exclude-action" \
            "@stdout-logger" \
            "@bash-clash"

    container::add "kill-action" \
        "$__services_base/src/action/kill-action" \
            "@bash-clash" \
            "@stdout-logger"

    container::add "report-action" \
        "$__services_base/src/action/report-action" \
            "@bash-clash" \
            "@view-dir"
}

##
# Defines all configured services.
##
services::define() {
    __services::define_config
    __services::define_parameters
    __services::define_services

    unset __services_base
    unset __services_config
}
