#!/usr/bin/env bash

__services_config="$@"

##
# Defines available config.
##
__services::define_config() {
    local key
    local value

    for item in ${__services_config[@]}; do
        [[ "$item" =~ ^(.*)=(.*)$ ]]
        key="${BASH_REMATCH[1]}"
        value="${BASH_REMATCH[2]}"

        container::add_scalar "$key" "$value"
    done
}

##
# Defines available parameters.
##
__services::define_parameters() {
    # dirs
    container::add_scalar "view-dir" "@{project-dir}/src/view"

    # files
    container::add_scalar "excluding-pipe" "@{org-tmp}/excluding-pipe"
    container::add_scalar "exemptions-file" "@{var-dir}/exemptions"

    # message routing
    container::add_array "message-routing" \
        -- "\@kill-message::@excluding-pipe" \
        -- "\@publish-message::@excluding-pipe" \
        -- "\@report-message::@excluding-pipe"

    # publishable topics
    container::add_scalar "time-machine-exclude-topic" "time-machine-exclude"

    # watchexec producer events
    container::add_array "excluding-producer-events" \
        -- "create" \
        -- "rename" \
        -- "meta"

    # publish action subscribers
    container::add_array "publish-action-subscribers" \
        -- "\@authorizing-events-subscriber::@time-machine-exclude-topic" \
        -- "\@excluding-action-subscriber::@time-machine-exclude-topic" \
        -- "\@excluding-notification-subscriber::@time-machine-exclude-topic"

    # authorizer config
    container::add_array "excluding-authorizers" \
        -- "@deduplication-authorizer" \
        -- "@exemptions-authorizer" \
        -- "@excluding-authorizer"

    # notification config
    container::add_array "excluding-notifications" \
        "${SUBSCRIBED_NOTIFICATIONS[@]//@/-- @}"

    container::add_scalar "slack-webhook" "${SLACK_WEBHOOK:-false}"
}

##
# Defines available services.
##
__services::define_services() {
    # submodule services
    container::add_service "bash-clash" \
        "$tomchkk_private_projects_bash_clash/src/index"

    container::add_service "file-logger" \
        "$tomchkk_private_projects_bash_logger/src/index" \
            -- "@log-level" \
            -- "@file-channel"

    container::add_service "stdout-logger" \
        "$tomchkk_private_projects_bash_logger/src/index" \
            -- "@log-level" \
            -- "@stdout-channel" \
            -- "->"

    # commands
    container::add_service "app-command" \
        "@{project-dir}/src/command/app-command" \
            -- "@edit-command" \
            -- "@exemptions-command" \
            -- "@queue-command" \
            -- "@services-command" \
            -- "@watch-command"

    container::add_service "edit-command" \
        "@{project-dir}/src/command/edit-command" \
            -- "@edit-feature"

    container::add_service "exemptions-command" \
        "@{project-dir}/src/command/exemptions-command" \
            -- "@exemptions-feature"

    container::add_service "queue-command" \
        "@{project-dir}/src/command/queue-command" \
            -- "@consume-feature" \
            -- "@message-feature" \
            -- "@produce-feature"

    container::add_service "services-command" \
        "@{project-dir}/src/command/services-command" \
            -- "@services-feature"

    container::add_service "watch-command" \
        "@{project-dir}/src/command/watch-command" \
            -- "@watch-feature" \
            -- "@profiles-dir" \
            -- "$HOME"

    # features
    container::add_service "consume-feature" \
        "@{project-dir}/src/feature/consume-feature" \
            -- "@excluding-consumer"

    container::add_service "edit-feature" \
        "@{project-dir}/src/feature/edit-feature" \
            -- "@time-machine-editor"

    container::add_service "exemptions-feature" \
        "@{project-dir}/src/feature/exemptions-feature" \
            -- "@exemptions-service" \
            -- "@time-machine-editor"

    container::add_service "message-feature" \
        "@{project-dir}/src/feature/message-feature" \
            -- "@message-bus"

    container::add_service "produce-feature" \
        "@{project-dir}/src/feature/produce-feature" \
            -- "@excluding-producer"

    container::add_service "services-feature" \
        "@{project-dir}/src/feature/services-feature" \
            -- "@stdout-logger" \
            -- "@container-cache-dir"

    container::add_service "watch-feature" \
        "@{project-dir}/src/feature/watch-feature" \
            -- "@watchexec-options-resolver" \
            -- "@excluding-consumer" \
            -- "@message-bus" \
            -- "@stdout-logger" \
            -- "@excluding-pipe" \
            -- "$WATCHEXEC_DEBUG"

    # consumers
    container::add_service "excluding-consumer" \
        "@{project-dir}/src/service/queue/consumer" \
           --  "@excluding-pipe" \
           --  "@stdout-logger" \
           --  "@message-handler"

    # file profile services
    ## manager
    container::add_service "profile-manager" \
        "@{project-dir}/src/service/profile/profile-manager" \
            -- "@stdout-logger"

    ## resolver
    container::add_service "watchexec-options-resolver" \
        "@{project-dir}/src/service/profile/resolver/watchexec-options-resolver" \
            -- "@profile-manager" \
            -- "@stdout-logger"

    ## matcher
    container::add_service "profile-matcher" \
        "@{project-dir}/src/service/profile/matcher/profile-matcher" \
            -- "@profile-manager" \
            -- "@watchexec-tester" \
            -- "@predicate-tester" \
            -- "@stdout-logger"

    container::add_service "watchexec-tester" \
        "@{project-dir}/src/service/profile/matcher/tester/watchexec-tester"

    container::add_service "predicate-tester" \
        "@{project-dir}/src/service/profile/matcher/tester/predicate-tester"

    # producers
    container::add_service "excluding-producer" \
        "@{project-dir}/src/service/queue/producer" \
            -- "@stdout-logger" \
            -- "@bash-clash" \
            -- "@message-bus" \
            -- "@time-machine-exclude-topic" \
            -- "@profile-matcher" \
            -- "@excluding-producer-events"

    # buses
    container::add_service "message-bus" \
        "@{project-dir}/src/bus/message-bus" \
            -- "@stdout-logger" \
            -- "@message-routing"

    # messages
    container::add_service "kill-message" \
        "@{project-dir}/src/message/kill-message"

    container::add_service "publish-message" \
        "@{project-dir}/src/message/publish-message"

    container::add_service "report-message" \
        "@{project-dir}/src/message/report-message"


    # handlers
    container::add_service "message-handler" \
        "@{project-dir}/src/handler/message-handler" \
            -- "@stdout-logger"

    # message actions
    container::add_service "kill-action" \
        "@{project-dir}/src/action/kill-action" \
            -- "@bash-clash" \
            -- "@stdout-logger"

    container::add_service "publish-action" \
        "@{project-dir}/src/action/publish-action" \
            -- "@stdout-logger" \
            -- "@bash-clash" \
            -- "@publish-action-subscribers"

    container::add_service "report-action" \
        "@{project-dir}/src/action/report-action" \
            -- "@bash-clash" \
            -- "@view-dir"

    # subscribers
    container::add_service "authorizing-events-subscriber" \
        "@{project-dir}/src/subscriber/authorizing-subscriber" \
            -- "@stdout-logger" \
            -- "@excluding-authorizers"

    container::add_service "excluding-action-subscriber" \
        "@{project-dir}/src/subscriber/excluding-subscriber" \
            -- "@bash-clash" \
            -- "@exclude-service"

    container::add_service "excluding-notification-subscriber" \
        "@{project-dir}/src/subscriber/notifying-subscriber" \
            -- "@stdout-logger" \
            -- "@excluding-notifications"

    # deduplication services
    container::add_service "deduplication-authorizer" \
        "@{project-dir}/src/service/deduplication/deduplication-authorizer" \
            -- "@stdout-logger" \
            -- "@bash-clash" \
            -- "@message-cache"

    container::add_service "message-cache" \
        "@{project-dir}/src/service/deduplication/message-cache" \
            -- "@{cache-dir}/deduplication" \
            -- "$MESSAGE_CACHE_STL"

    # editing services
    container::add_service "exclude-service" \
        "@{project-dir}/src/service/editing/exclude-service" \
            -- "@stdout-logger" \
            -- "@time-machine-editor"

    container::add_service "excluding-authorizer" \
        "@{project-dir}/src/service/editing/excluding-authorizer" \
            -- "@stdout-logger" \
            -- "@time-machine-editor" \
            -- "@bash-clash"

    container::add_service "time-machine-editor" \
        "@{project-dir}/src/service/editing/time-machine-editor" \
            -- "@x-attribute-editor"

    container::add_service "x-attribute-editor" \
        "@{project-dir}/src/service/editing/x-attribute-editor"

    # notifications
    container::add_service "system-notification" \
        "@{project-dir}/src/notification/excluding/system-notification" \
            -- "@bash-clash" \
            -- "Time Warp" \
            -- "Path excluded from Time Machine backups:" \
            -- "Submarine" \
            -- false

    container::add_service "slack-notification" \
        "@{project-dir}/src/notification/excluding/slack-notification" \
            -- "@bash-clash" \
            -- "@stdout-logger" \
            -- "@slack-client" \
            -- "@slack-webhook"

    # clients
    container::add_service "slack-client" \
        "@{project-dir}/src/service/slack/slack-client"

    # exemptions
    container::add_service "exemptions-authorizer" \
        "@{project-dir}/src/service/exemptions/exemptions-authorizer" \
            -- "@stdout-logger" \
            -- "@bash-clash" \
            -- "@exemptions-service"

    container::add_service "exemptions-service" \
        "@{project-dir}/src/service/exemptions/exemptions-service" \
            -- "@exemptions-file"
}

__services::define_config
__services::define_parameters
__services::define_services

unset __services_config
