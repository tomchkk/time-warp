#!/usr/bin/env bash

__report_action_bash_clash="${1:?"bash-clash is a required parameter"}"
__report_action_view_dir="${2:?"view-dir is a required parameter"}"

##
# Echos a report view to the $enquirer.
##
action::process_action() {
    source $__report_action_bash_clash $@

    local enquirer=$(bash_clash::get "enquirer")

    if [[ ! -w "$enquirer" ]]; then
        log::error "The enquirer '$enquirer' does not exist."

        return 1 # return to continue execution
    fi

    local queue_pid=$(bash_clash::get "queue_pid")
    local uptime=$(bash_clash::get "uptime")
    local message_count=$(bash_clash::get "message_count")
    local throughput=$(__report_action::calculate_throughput $message_count $uptime)

    uptime=$(__report_action::format_uptime $uptime)

    echo -e "\n" > $enquirer
    echo -e "$(source $__report_action_view_dir/report-view)" | column -t -s="," > $enquirer
}

##
# Calculates the consumer throughput in messages per second.
#
__report_action::calculate_throughput() {
    local count=${1:?"A count of messages is required"}
    local seconds=${2:?"The uptime in microseconds is required"}

    printf "%.2fmps" $(echo "scale=2; $count / $seconds" | bc)
}

##
# Formats the uptime as d(ays) h(ours) m(inutes) s(econds).
##
__report_action::format_uptime() {
    local uptime=${1:?"The uptime in microseconds is required"}

    # remove 1 hour from uptime so it displays the elapsed time
    local elapsed=$(date -r $(( $uptime - 3600 )) +"%-Hh %-Mm %-Ss")
    local days=$(($uptime / 86400))

    echo "${days}d $elapsed"
}
