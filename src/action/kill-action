#!/usr/bin/env bash

# TODO: add action scripts to the container
__kill_action_bash_clash=$(container::resolve "@bash-clash")
__kill_action_logger=$(container::resolve "@stdout-logger")

# TODO: see if this can work
# function __kill_action::construct() {
#     local parameters=(
#         __kill_action_bash_clash
#         __kill_action_logger
#     )

#     for i in ${!parameters[*]}; do
#         key=$(( i + 1 ))
#         parameters[$i]="${parameters[$i]}"=$(
#             container::resolve "${!key}" "$(basename $0)"
#         )
#         parameters[$i]="${parameters[$i]}"="${!key}"
#     done

#     echo ${parameters[*]}
# }
# declare $(__kill_action::construct "@bash-clash" "@stdout-logger")

##
# Exits the current process.
##
action::process_action() {
    source $__kill_action_bash_clash "$@"

    local pipe=$(bash_clash::get "pipe")
    local queue_pid=$(bash_clash::get "queue_pid")
    local enquirer=$(bash_clash::get "enquirer")

    source $__kill_action_logger && log_slog::info \
        "Killing the queue at '$pipe' (pid: $queue_pid)"

    # exit the current process (the consumer)
    exit 0
}
