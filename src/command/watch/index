#!/usr/bin/env bash

##
# Cats the command's usage documentation.
##
__watch_command::usage() {
    cat << EOF

$APP_NAME ($APP_VERSION) - Watch

Recursively watch a path, or paths, for changes to files matching configured
file profile filters.

Usage:  $APP_NAME watch [options] <args>

Options:
    -h, --help      Print usage information
    -p, --path      Watch a path for relevant changes.  This may be specified
                    multiple times to monitor multiple paths.

EOF
}

__watch_command_watch_feature=${1:?"The watch feature is required"} && shift

# handle empty args
[[ -z "$@" ]] && set -- "--help"

# set defaults
__watch_command_paths=()

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -p|--path)
            __watch_command_path="$2" && shift

            if [[ -z "$__watch_command_path" ]]; then
                echo "A path must be set" && exit 1
            else
                __watch_command_paths+=("$__watch_command_path");
            fi
        ;;
        -h|--help|*)
            __watch_command::usage && exit 0
        ;;
    esac
    shift
done

# resolve options and consume"
# time-warp queue --consume

# resolve options and produce
# time-warp queue --produce

source $__watch_command_watch_feature && feature::watch ${__watch_command_paths[*]}
