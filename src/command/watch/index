#!/usr/bin/env bash

__watch_command_watch_feature=${1:?"The watch feature is required"}
__watch_command_default_profiles=${2:?"A default profiles dir is required"}
__watch_command_default_root=${3:?"A default root watch path is required"}

__watch_command_args=${@:4}

##
# Cats the command's usage documentation.
##
__watch_command::usage() {
    cat << EOF

$APP_NAME ($APP_VERSION) - Watch

Watch for changes to files matching configured profiles, and optionally take
action on identified items.

Usage:  $APP_NAME watch [options] <args>

Options:
    -h, --help      Print usage information
    -p, --profiles  A file profile or a directory containing multiple profiles
                    used to identify target file items
    -r, --root      The root directory path from which to watch for changes. This
                    option may be specified multiple times to set up multiple watches

EOF
}

##
# Handles in incoming watch commands.
##
__watch_command::handle() {
    # handle empty args
    [[ -z "$@" ]] && set -- "--help"

    local profiles="$__watch_command_default_profiles"
    local root_paths=()

    while [[ "$#" -gt 0 ]]; do
        case $1 in
            -p|--profiles)
                profiles="$2" && shift
            ;;
            -r|--root)
                root_paths+=($2) && shift
            ;;
            -h|--help|*)
                __watch_command::usage && exit 0
            ;;
        esac

        shift
    done

    if [[ -z $root_paths ]]; then
        root_paths="$__watch_command_default_root"
    fi

    source $__watch_command_watch_feature && feature::watch "$profiles" "${root_paths[*]}"
}

__watch_command::handle $__watch_command_args
