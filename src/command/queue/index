#!/usr/bin/env bash

# construct the script's dependencies
{
    __parameters=(
        __queue_command_excluding_consumer=@excluding-consumer
        __queue_command_message_bus=@message-bus
    )
    source "$SERVICE_LOADER" "$BASH_SOURCE" ${__parameters[*]}
    unset __parameters
}

##
# Cats the command's usage documentation.
##
__queue_command::usage() {
    cat << EOF

$APP_NAME ($APP_VERSION) - Queue

Consume or produce $APP_NAME queue items.

Usage:  $APP_NAME queue [options] <args>

Options:
    -h, --help      Print usage information
    -c, --consume   Open a FIFO pipe to consume items pushed to the queue
    -k, --kill      Kill running queue services
    -l, --list      List running queue services
    -r, --report    View a report from running services
    -p, --produce   Produce queue items

EOF
}

opt="$1" && shift
args="$@"

case "$opt" in
    -c|--consume)
        source $__queue_command_excluding_consumer
    ;;
    -k|--kill)
        source $__queue_command_message_bus
        message_bus::dispatch_message "KILL"
    ;;
    -l|--list)
        echo "list running queue services..."
    ;;
    -r|--report)
        source $__queue_command_message_bus
        message_bus::dispatch_message "REPORT"
    ;;
    -p|--produce)
        echo "produce"
        # - runs `watchexec --resolved-options -- /path/2/producer`
        #   - watches for changes to given paths gets filters from profiles
        #   - ignores changes caused by itself
        #   - passes normalised path to `time-warp match $path` to match the path to a
        #     configured profile
        #   - on successful match, pushes message (timestamp and path) to time-warp/excluding.q file

        # watchexec \
        #     --watch /Users/tom/ \
        #     --filter '**/vendor' \
        #     --ignore '**/vendor/**/vendor/**' \
        #     --no-vcs-ignore \
        #     --no-default-ignore \
        #     --no-shell \
        #     -- "$service/queue/producer"
    ;;
    -h|--help|*)
        __queue_command::usage && exit 0
    ;;
esac
