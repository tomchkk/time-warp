#!/usr/bin/env bash

__producer_logger=${1:?"A logger is required"}
__producer_bus=${2:?"A message bus is required"}
__producer_topic=${3:?"A publishable topic is required"}
__producer_profile_matcher=${4:?"A profile matcher is required"}
__producer_watching=${@:5}

source $__producer_logger

if [[ -z "$__producer_watching" ]]; then
    log::error "No events to watch are defined" && exit 1
fi

##
# Produces publishable topic messages into the given message bus.
#
producer::produce() {
    local path_profiles=${1:?"A path profile is required"}

    local events=('created' 'removed' 'renamed' 'written' 'meta')
    local modifications=(
        'WATCHEXEC_CREATED_PATH'
        'WATCHEXEC_REMOVED_PATH'
        'WATCHEXEC_RENAMED_PATH'
        'WATCHEXEC_WRITTEN_PATH'
        'WATCHEXEC_META_CHANGED_PATH'
    )

    for key in ${!modifications[*]}; do
        local event="${events[$key]}"
        local modification="${modifications[$key]}"
        # TODO: fix this (with tests)
        # - it will probably fail when one of the paths contains a space...
        local paths=($(echo "${!modification}" | sed -E 's/:/ /g'))

        if [[ -z "${paths[@]}" ]]; then
            # no notable event occurred: no paths were given
            continue
        elif ! $(__producer::event_is_watched $event); then
            log::debug "Ignoring '$event' event: not watched"

            continue
        fi

        log::debug "Watched event '$event' was fired"

        # now that shit is getting real, let's charge our weapons!
        source $__producer_profile_matcher "$path_profiles"
        source $__producer_bus

        local path; for path in ${paths[@]}; do
            # $path will be a path stub if $WATCHEXEC_COMMON_PATH is set,
            # otherwise it will be a full path. So, either way, the two can
            # be concatenated to get a full path to a changed file
            path="${WATCHEXEC_COMMON_PATH}${path}"

            log::debug "Detected modification to '$path'."

            if $(matcher::match $path); then
                log::info "Matcher matched path '$path'"

                TIME_WARP_PATH_STACK+=("$path")

                local message=(
                    "PUBLISH"
                    --producer-pid "$$"
                    --topic "$__producer_topic"
                    --event "$event"
                    --path "$path"
                )
                message_bus::dispatch_message ${message[@]} &
            else
                log::info "Matcher did not match path '$path'"
            fi
        done
    done
}

##
# Determines if the given event is configured to be watched.
#
__producer::event_is_watched() {
    if $(printf '%s\n' ${__producer_watching[@]} | grep -q -E ^$1$); then
        return 0
    fi

    return 1
}
