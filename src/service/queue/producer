#!/usr/bin/env bash

# TODO: look into making this more generic:
# - include a list of watchexec events to subscribe to
# - use message_bus::dispatch_message "PUBLISH" --topic $__producer_topic --path $__producer_path

__producer_logger=${1:?"A logger is required"}
__producer_bus=${2:?"A message bus is required"}

source $__producer_logger
source $__producer_bus

__producer_events=('created' 'removed' 'renamed' 'written' 'meta')
__producer_modifications=(
    'WATCHEXEC_CREATED_PATH'
    'WATCHEXEC_REMOVED_PATH'
    'WATCHEXEC_RENAMED_PATH'
    'WATCHEXEC_WRITTEN_PATH'
    'WATCHEXEC_META_CHANGED_PATH'
)

for key in ${!__producer_modifications[*]}; do
    __producer_event="${__producer_events[$key]}"
    __producer_modification="${__producer_modifications[$key]}"
    __producer_paths=($(echo "${!__producer_modification}" | sed -E 's/:/ /g'))

    log::debug "watchexec event '$__producer_event' was fired"

    if [[ -z "$__producer_paths" ]]; then
        log::debug "No watched modifications detected."

        return 0
    fi

    # TODO: add event types to file profiles
    if [[ "$__producer_event" =~ ^created|renamed$ ]]; then
        # presently, for the purposes of this script, we're only interested in
        # 'created' or 'renamed' events

        for path in ${__producer_paths[*]}; do
            # $path will be a path stub if $WATCHEXEC_COMMON_PATH is set,
            # otherwise it will be a full path. So, either way, the two can be
            # concatenated to get a full path to a changed file
            path="${WATCHEXEC_COMMON_PATH}${path}"

            # we're only concerned with paths that exist
            if [[ -e "$path" ]]; then
                log::debug "Detected modification to '$path'."

                # TODO: here we will try to match $path using something like
                # if $(time-warp match $path); then push to the queue - i.e.:
                if [[ -d "$path" ]] && [[ -f "$path/"../composer.json ]]; then
                    log::debug "Path profile match: '$path'."

                    message_bus::dispatch_message "EXCLUDE" $path

                    # TODO: if the queue is closed, which it could be from elsewhere,
                    # should we abort this running script?
                fi
            else
                log::debug "Ignoring watchexec changed path '$path': doesn't exist."
            fi
        done
    else
        log::debug "Ignoring '$__producer_event' event: not relevant."
    fi
done
