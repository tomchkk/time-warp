#!/usr/bin/env bash

# opens a fifo pipe at the given path and then executes the given command using
# arguments pushed to the pipe, or echos the arguments, if no command is given

# the fifo pipe to consume
fifo="$1" && shift
[[ -z "$fifo" ]] && echo "A fifo pipe path must be provided" && exit 1

# the piped message handler
handler="$@"
[[ -z "$handler" ]] && echo "A message handler must be provided" && exit 1

# make the pipe if it doesn't exist already
[[ -e "$fifo" ]] || mkfifo "$fifo"

# record the time the fifo came up
uptime=$(date +"%s")

# remove the pipe on exit
trap "rm -f $fifo" EXIT

source $handler

while true; do
    # TODO: can we do a while read?
    if read -r message < $fifo; then
        timestamp=$(date +"%s")

        # TODO: move logging to middleware
        echo " -> [$(date -r $timestamp +"%Y-%m-%d %H:%M:%S")] - $message"

        context=(
            --pipe="$fifo"
            --queue-pid="$$"
            --timestamp="$timestamp"
            --uptime="$uptime"
        )

        __handle_message $message "${context[*]}"
    fi
done
