#!/usr/bin/env bash

# opens a fifo pipe at the given path and then executes the given command using
# arguments pushed to the pipe, or echos the arguments, if no command is given

# the fifo pipe to consume
fifo="$1" && shift 1
# the piped message handler

# TODO: todo todo: avoid this mess....?
handler="$1 $2 $3 $4 $5" && shift 5 && source $handler

logger="$1 $2" && shift 2 && source $logger "$(tty)"

if [[ -z "$fifo" ]]; then
    __log_error "A fifo pipe path must be provided" && exit 1
fi

if [[ -z "$handler" ]]; then
    __log_error "A message handler must be provided" && exit 1
fi

# make the pipe if it doesn't exist already
[[ -e "$fifo" ]] || mkfifo "$fifo"

# record the time the fifo came up
start_time=$(date +"%s")

# remove the pipe on exit
trap "rm -f $fifo" EXIT

while true; do
    # TODO: can we do a while read?
    if read -r message < $fifo; then
        timestamp=$(date +"%s")

        # TODO: add event dispatcher?

        __log_info "Message received: $message"

        context=(
            --pipe="$fifo"
            --queue-pid="$$"
            --timestamp="$timestamp"
            --uptime="$(($timestamp - $start_time))"
        )

        __handle_message $message "${context[*]}"
    fi
done
