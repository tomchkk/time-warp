#!/usr/bin/env bash

source "${1:?"A logger is required"}"
source "${2:?"A matcher type is required"}"

__profile_matcher_options=""
__profile_matcher_predicates=""

##
# Sets options to match against a path.
##
profile_matcher::set_options() {
    __profile_matcher_options="$@"
}

##
# Gets an option value from a set profile's options
##
profile_matcher::get_option() {
    local long="${1:?"A long option must be specified"}"
    local short="$2"

    local option; for option in $__profile_matcher_options; do
        if [[ "$option" =~ ^-("$short"|-"$long")=(.+)$ ]]; then
            echo "${BASH_REMATCH[2]}"

            return 0
        fi
    done

    return 1
}
##
# Sets predicates to match against a path.
##
profile_matcher::set_predicates() {
    __profile_matcher_predicates="$@"
}

##
# Matches a given path against a set of profile option and predicate matching
# strategies.
##
__profile_matcher::matches_strategy() {
    local path="$@"

    local options="$__profile_matcher_options"
    local predicates="$__profile_matcher_predicates"

    strategy::set_path "$path"

    log::debug "Checking profile matches for path '$path'..."

    if ! $(strategy::path_matches_options "$options"); then
        log::debug "Options do not match!"

        return 1
    fi

    if ! $(strategy::path_matches_predicates "$predicates"); then
        log::debug "Predicates do not match!"

        return 1
    fi

    return 0
}
