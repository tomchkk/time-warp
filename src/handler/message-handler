#!/usr/bin/env bash

# construct the script's dependencies
{
    __parameters=(
        __message_handler_actions_dir=@action-dir
        __message_handler_bash_clash=@bash-clash
        @stdout-logger
    )
    source "$SERVICE_LOADER" "$BASH_SOURCE" ${__parameters[*]}
    unset __parameters
}

if [[ ! -d "$__message_handler_actions_dir" ]]; then
    log_slog::error "An existing actions directory is required" && exit 1
fi

##
# Gets the value of the --enquirer option from the given arguments
##
__message_handler::get_enquirer() {
    echo $(
        source "$__message_handler_bash_clash" $@ && bash_clash::get "enquirer"
    )
}

##
# Handles message pushed to a consumer pipe.
#
message_handler::handle_message() {
    local message="${1:-[EMPTY]}" && shift
    local args="$@"

    local enquirer=$(__message_handler::get_enquirer "$args")
    local action="$__message_handler_actions_dir/$(
        echo $message | tr '[:upper:]' '[:lower:]'
    )-action"

    if [[ ! -f "$action" ]]; then
        log_slog::error "An action could not be found for a '$message' message."

        # TODO: can we only use return statements, instead of exits (except
        # where absolutely necessary?)
        return 1 # return to continue execution
    fi

    if [[ ! -w "$enquirer" ]]; then
        log_slog::error "The enquirer '$enquirer' does not exist."

        return 1 # return to continue execution
    fi

    source $action && action::process_action $args
}
