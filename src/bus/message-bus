#!/usr/bin/env bash

__message_bus_logger="$1" && $LOAD $__message_bus_logger
__message_bus_message_dir="$2"
__message_bus_routing=${@:4} # skip one item of arg in routing

# TODO: do we still need these; can we do them better?
if [[ ! -d "$__message_bus_message_dir" ]]; then
    log_slog::error "An existing message directory is required" && exit 1
fi

if [[ -z "$__message_bus_routing" ]]; then
    log_slog::error "No message routing is defined" && exit 1
fi

##
# Dispatches a message for an action via a given channel.
##
message_bus::dispatch_message() {
    local action="${1:-[empty]}"

    local message="$__message_bus_message_dir/$(
        echo $action | tr '[:upper:]' '[:lower:]'
    )-message"

    if [[ ! -f "$message" ]]; then
        log_slog::error "A message could not be found for the '$action' action."
        exit 1
    fi

    # TODO: consider making a message registry, in case it convers benefits
    local channel
    for route in ${__message_bus_routing[*]}; do
        # expected routing format:
        # - path/2/action-message::/channel/to/write/2
        if [[ "$route" =~ ^"$message"::(.+)$ ]]; then
            channel=${BASH_REMATCH[1]}
            break
        fi
    done

    if [[ -z "$channel" ]]; then
        log_slog::error "A message route is not defined for the '$action' message."
        exit 1
    fi

    if [[ ! -e "$channel" ]] || [[ ! -w "$channel" ]]; then
        log_slog::error "The channel '$channel' does not exist or is not writable."
        exit 1
    fi

    source $message && message::send_message > $channel

    log_slog::info "'$action' message was dispatched."
}
