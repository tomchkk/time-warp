#!/usr/bin/env bash

##
# Builds an array of services and their resolved dependencies with an command
# for creating the service, or config, that can be called dynamically using
# `eval`
##
__loader::init() {
    local originator="$1" && shift
    local parameters="$@"

    for parameter in ${parameters[*]}; do
        local prefix=""
        local assignment=""
        local name=""
        local service=""

        if [[ "$parameter" =~ ^(.+=)(.+)$ ]]; then
            # here be variable assignments

            prefix="declare "
            assignment="${BASH_REMATCH[1]}"
            name="${BASH_REMATCH[2]}"
        else
            name="$parameter"
        fi

        # resolve the actual service
        service="$(container::resolve $name)"

        if  [[ -n "$assignment" ]] &&
            [[ ${service[*]} =~ ^--\s*(.*)$ ]]
        then
            # here be array-like assignments

            prefix="$prefix -a "
            service="("$(echo ${BASH_REMATCH[1]} | xargs)")"

        elif [[ -z "$assignment" ]] &&
             [[ -e $(container::get_source "$name") ]]
        then
            # here be services for sourcing

            prefix="source "
        fi

        services+=("${prefix}${assignment}${service[*]}")
    done
}

originator="$1" && shift
services=()

__loader::init "$originator" $@

# echo "## Loading '$(basename $(dirname $originator))/$(basename $originator)' services:"

for key in ${!services[*]}; do
    # echo " # loading service:" ${services[$key]}
    eval ${services[$key]}
done

# echo -e " ##\n"

unset originator
unset services
unset key
